version: '3'
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_NODENAME=rabbitmq@rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15692:15692"
      - "5552:5552"
      - "5671:5671"
    networks:
      network:
        ipv4_address: 10.5.0.5
    restart: always
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    ports:
      - 9090:9090
      
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:
      - network
    restart: always
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
      - ./grafana-data:/var/lib/grafana

  consumer:
    build: ./subscriber
    image: subscriber
    ports:
      - "8080:80"
    links: 
      - rabbitmq
    networks:
      - network
    depends_on: 
      rabbitmq:
        condition: service_started
    restart: always

  publisher:
    build: ./publisher
    image: publisher
    links: 
      - rabbitmq
    ports:
      - "1234:1234"
    networks:
      - network
    depends_on: 
      rabbitmq:
        condition: service_started
    restart: always

  streampublisher:
    build: ./streampublisher
    image: streampublisher
    links: 
      - rabbitmq
    ports:
      - "1235:1235"
    environment:
      - hostip=10.5.0.5
    networks:
      - network
    depends_on: 
      rabbitmq:
        condition: service_started
    restart: always

  streamsubscriber:
    build: ./streamsubscriber
    image: streamsubscriber
    links: 
      - rabbitmq
    environment:
      - hostip=10.5.0.5
    ports:
      - "1111:1111"
    networks:
      - network
    depends_on: 
      rabbitmq:
        condition: service_started
    restart: always

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

